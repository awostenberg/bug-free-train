/*
 * This source file was generated by the Gradle 'init' task
 *
 * fizzbuzz
 *      solve for fizzbuzz
 *      count to 100
 *      but if divisible by 3, say "fizz"; if divisible by 5, "buzz", if 3 and 5, "fizzbuzz",
 *
 * for example
 *      1   -> 1
 *      3   -> fizz
 *      5   -> buzz
 *     15   -> fizzbuzz
 *
 * tdd
 *      red: write failing test
 *      green: get it to pass, quickly,
 *      refactor: clean up to definition of done
 * definition of done:
 *      all tests pass? reveals intent? no duplication? fewest elements?
 *
 */
package org.example;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test void one_should_1() {
        App a = new App();
        final String result = a.fizzbuzz(1);
        assertEquals("1", result);
    }

    @Test void two_should_2() {
        App a = new App();
        final String result = a.fizzbuzz(2);
        assertEquals("2", result);
    }
}
